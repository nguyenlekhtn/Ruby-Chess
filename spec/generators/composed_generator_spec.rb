require_relative '../../lib/library'

describe ComposedGenerator do
  subject(:generator) { described_class.new([generator1, generator2, generator3]) }

  describe '#cells' do
    let(:generator1) { double('generator1', cells: [Cell.new(0, 0), Cell.new(1, 2)])}
    let(:generator2) { double('generator2', cells: [Cell.new(1, 0), Cell.new(1, 2)])}
    let(:generator3) { double('generator3', cells: [])}

    it 'should return all cells generated by generators without duplication' do
      result = generator.cells(Cell.new(2, 3))
      expected = [
        [0, 0], [1, 0], [1, 2]
      ].map { |(row, col)| Cell.new(row, col)}
      expect(result).to match_array expected
    end
  end
end